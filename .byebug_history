c
params
c
count > 0 && params[:description].present?
params
c
@ids = @events.collect(&:id)
 @events = Event.where(full_query)
full_query = query_array.unshift(query)
query_array << params[:key_event_id]
 query += " key_event_id = ? "
 count = count + 1
params[:key_event_id].present?
params
c
params
query_array << params[:start_date][:end_date]
query_array << params[:end_date][:start_date]
query_array << params[:start_date][:start_date]
query += " start_date BETWEEN ? AND ? "
params[:end_date][:start_date].present? && params[:end_date][:end_date].present?
params[:end_date] 
params[:start_date] 
params[:start_date][:start_date].present? 
params
c
query_array << params[:key_event]
query_array << params[:key_event_id]
query += " key_event_id = ? "
params[:key_event].present?
params
c
query += " key_event_id = ? "
params[:key_event].present?
params
c
@event = Event.new
@event = Even.new
params
c
params[:key_event]
params
c
Attendance.pluck(Student.find(student_id).name,:student_id)
@student = Student.find(student_id)
Attendance.pluck(:student_id)
Attendance.pluck(Student.find(:student_id).name,:student_id)
Attendance.pluck(Student.find(:student_id).name,:student_id))
c
Student.find(attendance.student_id).name
Student.find(attendance.student_id)
attendance
c
params
@attendance = Attendance.new(attendance_params)
@attendance = Attendance.new
params
c
Student.all.collect{|s| s.levels.collect{|l| l.name}}
Student.all.collect{|s| s.levels.collect{|l| l.anme}}
Student.pluck(:name,:id)
c
(Student.all.map{|l| l.levels.map{|l| l.name}})
(Student.all.map{|l| l.levels})
(Student.all.map{|l| l.name})
Student.pluck(:name,:id)(Student.all.map{|l| l.name})
Student.pluck(:name,:id)
Student.pluck(:name,:id))
Student.pluck(:name,:id,(Level.pluck(:name)))
Student.pluck(:name,:id)
c
@student.is_disabled == true
@student.is_disabled
 params[:is_disabled] == true
c
full_query = query_array.unshift(query)
c
params[:crb_checked] == "true"
params[:crb_checked] == true
params[:crb_checked]
params[:crb_checked].to_i
params[:crb_checked]
params
c
params[:crb_checked]
params[:crb_checked].to_boolean
params[:crb_checked] == "true"
params[:crb_checked]
params[:crb_checked].boolean
params[:crb_checked].gsub('"','')
params[:crb_checked].to_a
params[:crb_checked]
c
full_query 
params
full_query 
c
params
full_query
c
full_query
c
params
query_array << params[:crb_checked]
query += " crb_checked = ? "
params[:crb_checked].present?
c
full_query 
c
params
c
full_query
c
full_query
@teachers
params
c
full_query = query_array.unshift(query)
c
params
full_query
@teachers
c
@teachers
full_query
params
c
query_array << params[:dbs_checked]
query += " crb_checked = ? "
params[:dbs_checked].present?
count > 0 && params[:dbs_checked].present?
full_query = query_array.unshift(query)
c
full_query = query_array.unshift(query)
c
@teachers = Teacher.where(full_query)
full_query
c
full_query 
c
query_array << params[:dbs_checked]
query += " crb_checked = ? "
 params[:dbs_checked].present?
 count > 0 && params[:dbs_checked].present?
c
params
c
@teachers = Teacher.where(full_query)
full_query
c
 full_query = query_array.unshift(query)
 @teachers = Teacher.where(full_query)
c
params
c
@teachers = Teacher.where(full_query)
c
query_array << "%#{params[:email]}%"
 query += " email like ? "
params[:q][:email_contains] == "contain"
params[:email].present?
 count > 0 && params[:email].present?
c
full_query
@teachers = Teacher.where(full_query)
c
teacher_filter
c
@teachers
c
teacher_filter
params
c
format
format.html
format.js
teacher_filter
c
format.html
format.js
c
request.format
c
teacher_filter
request.xhr? && params[:q].present?
params
c
teacher_filter
c
teacher_filter
request.xhr?
request.xhr? && params[:q].present?
c
@teachers = Teacher.where(full_query)
full_query = query_array.unshift(query)
query_array << "%#{params[:name]}%"
 query += " name like ? "
count = count + 1
params[:q][:name_contains] == "contain"
params
c
   20:       query = ""
   19:       query_array = []
count = 0
params[:q].present?
params
c
params
c
@teacher =  Teacher.new
params
c
@levels = LevelsStudent.where(level_id:Level.find_by(name:params[:level_name]).try(:id))
query.empty?
full_query1 = query_array1.unshift(query1)
full_query = query_array.unshift(query)
params
c
student_ids.present?
@ids.present?
@student.collect(&:id)
student_ids.present?
@ids.present?
c
@student
@students
@student
@students = nil
arr.nil?
c
@ids.present? || student_ids.present?
@ids.present? && student_ids.present?
 @ids = @students.collect(&:id)
@ids.present?
student_ids = @student.collect(&:id)
c
params
c
@levels = LevelsStudent.where(level_id:Level.find_by(name:params[:level_name]).try(:id))
params
c
@students = @students.joins(:levels, :LevelsStudent).where(levels: params[:level_name])
@students = Student.where(full_query)
query.empty?
 full_query1 = query_array1.unshift(query1)
full_query = query_array.unshift(query)
params
c
Student.send(params[:commit].downcase)
status_arr.include?(params[:commit])
params
c
Student.send(params[:commit])
c
Student.send(:params[:commit].downcase)
Student.send(:params[:commit])
